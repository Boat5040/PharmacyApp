@model PharmacyApp.ViewModels.POSViewModel
@using PharmacyApp.Constants
@{
    ViewBag.Title = "POS";
}
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>POS</title>

    <link href="~/Content/bootstrap.min.css" rel="stylesheet">
    <link href="~/Content/fonts/font-awesome/css/font-awesome.css" rel="stylesheet" />
    <link href="~/Content/animate.css" rel="stylesheet">
    <link href="~/Content/style.css" rel="stylesheet">
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="~/Content/style.css" rel="stylesheet" />
</head>

<body class="gray-bg">
    <div class="wrapper">
        <div class="wrapper-content">
            <form class="form-horizontal">
                <div class="row">

                    <div class="col-md-6">



                        <div class="form-group">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.ScannerCode, htmlAttributes: new { @class = "col-md-2 btn-xs btn-danger", style = "width:90px" })
                            </div>

                            <div class="col-md-7">
                                @Html.EditorFor(model => model.ScannerCode, new { htmlAttributes = new { @class = "input-sm form-control", style = "width:90%" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Products, htmlAttributes: new { @class = "col-md-2" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Products, new { htmlAttributes = new { @class = "input-sm form-control" } })
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Product, htmlAttributes: new { @class = "col-md-4 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.Product, new { htmlAttributes = new { @class = "input-sm form-control" } })
                                    </div>
                                </div>
                                </div>


                            <div class="col-md-6 col-md-pull-1">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SalesPrice, htmlAttributes: new { @class = "col-md-3 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.SalesPrice, new { htmlAttributes = new { @class = "input-sm form-control", @placeholder = "custom price" } })
                                    </div>
                                </div>
                            </div>

                            </div>


                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "col-md-4 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "input-sm form-control" } })
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6 col-md-pull-1">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "col-md-3 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "input-sm form-control" } })
                                    </div>
                                </div>
                            </div>

                        </div>


                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "col-md-4 " })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "input-sm form-control" } })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-offset-3">
                                <div class="form-group">
                                    <input type="submit" name="EnterItemCode" value="Enter Item Code" class="btn btn-sm btn-s btn-success" /> 
                                    <input type="submit" name="DeleteItem" value="Delete Item" class="btn btn-sm btn-danger" /> 
                                    <input type="submit" name="AddItem" value="Add Item" class="btn btn-sm btn-primary" />
                            </div>

                        </div>


                    </div>

                </div>
            </form>
        </div>
    </div>
</body>
</html>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


