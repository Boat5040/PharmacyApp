@model PharmacyApp.ViewModels.ChangePasswordViewModel
@using PharmacyApp.Constants;
@{
    ViewBag.Title = "ChangePassword";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-7">
        <h3>CHANGE PASSWORD</h3>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.RouteUrl(HomeControllerRoute.GetIndex)">Home</a>
            </li>
            <li class="active">
                <a href="#">@ViewBag.Title</a>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Update your password</h5>
                </div>
                <div class="ibox-content">
                    <div class="alert alert-info">
                        @ViewBag.Info
                    </div>
                    <form id="form" class="form-horizontal" method="post" action="@Url.RouteUrl(AccountControllerRoute.GetChangePassword)">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="alert alert-success" role="alert">
                            Your transaction has been sent for further processing . Please print the transaction details for future reference.
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(m => m.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(m => m.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(m => m.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-offset-2 col-lg-5">
                                <button class="btn btn-outline btn-sm btn-primary" type="submit">Change Password</button>
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>