<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  https://go.microsoft.com/fwlink/?LinkId=301880
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
    </sectionGroup>
  <sectionGroup name="nwebsec">
      <!-- For information on how to configure NWebsec please visit: https://docs.nwebsec.com/ -->
      <section name="httpHeaderSecurityModule" type="NWebsec.Modules.Configuration.HttpHeaderSecurityConfigurationSection, NWebsec, Version=4.3.0.0, Culture=neutral, PublicKeyToken=3613da5f958908a1" requirePermission="false" />
    </sectionGroup></configSections>

  <connectionStrings>
    <add name="DefaultConnection" connectionString="Data Source=.;Initial Catalog=PharmacyDb;Integrated Security=True;MultipleActiveResultSets=true" providerName="System.Data.SqlClient" />
    <!--<add name="SignatureDatabaseConnection" connectionString="Data Source=.;Initial Catalog=SignatureVerificationContext;Integrated Security=True;MultipleActiveResultSets=true" providerName="System.Data.SqlClient" />-->

  </connectionStrings>
    <system.net>
    <mailSettings>
      <smtp deliveryMethod="Network" from="ptony2040@gmail.com">
        <network host="smtp.gmail.com" port="587" userName="ptony2040@gmail.com" password="0242160155" defaultCredentials="false" enableSsl="true" />
      </smtp>
    </mailSettings>
  </system.net>

  <appSettings>
    <!-- webpages:Version - Use version 3 of the Razor engine (See http://blogs.msdn.com/b/webdev/archive/2013/07/10/how-does-vs-determine-which-version-of-razor-engine-to-use-when-editing-razor-webpage-files.aspx). -->
    <add key="webpages:Version" value="3.0.0.0" />
    <!-- webpages:Enabled - Prevents .cshtml or .vbhtml files in the Views folder from being directly accessible from a web browser. Important from a security standpoint that this is always false. (See http://stackoverflow.com/questions/4886095/what-is-the-function-of-webpagesenabled-in-mvc-3-web-config). -->
    <add key="webpages:Enabled" value="false" />
    <!-- ClientValidationEnabled - Enable client side JavaScript validation. -->
    <add key="ClientValidationEnabled" value="true" />
    <!-- UnobtrusiveJavaScriptEnabled - Enable client side JavaScript validation using jQuery Validate. -->
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <!-- Turn on/off ELMAH.MVC handler. -->
    <add key="elmah.mvc.disableHandler" value="false" />
    <!-- By default HandleErrorAttribute() is set as global filter, to disable it, set value to "true". -->
    <add key="elmah.mvc.disableHandleErrorFilter" value="false" />
    <!-- Secure the elmah route with authentication. -->
    <add key="elmah.mvc.requiresAuthentication" value="false" />
    <!-- Ignore the default route and use the elmah.mvc.route setting below. -->
    <add key="elmah.mvc.IgnoreDefaultRoute" value="true" />
    <!-- In case of authentication is turned on, you can specify exact roles of user that have access (e.g. "Administrator"). -->
    <add key="elmah.mvc.allowedRoles" value="*" />
    <!-- In case of authentication is turned on, you can specify exact users that have access (eg. "johndoe"). -->
    <add key="elmah.mvc.allowedUsers" value="*" />
    <!-- Configure ELMAH.MVC access route. Note that you should probably change this to something else.
         This is to add a little security through obscurity. hackers can't hack your elmah page if they
         don't know where it is.
         Note: If you change this value (Which you should) don't forget to also change the route in RouteConfig.cs. -->
    <add key="elmah.mvc.route" value="elmah" />    
    <add key="elmah.mvc.UserAuthCaseSensitive" value="true" />
  </appSettings>
  <system.web>
    
    <authentication mode="None" />
    
     <caching>
       <outputCacheSettings>
        <!-- outputCacheSettings - Controls how controller actions cache content in one central location.
                                   You can also modify the web configuration file without recompiling your application. -->
        <outputCacheProfiles>
          <!-- Cache the browserconfig.xml route for a day. -->
          <add name="BrowserConfigXml" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the Atom 1.0 feed route for a day. -->
          <add name="Feed" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the manifest.json route for a day. -->
          <add name="ManifestJson" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the opensearch.xml route for a day. -->
          <add name="OpenSearchXml" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the robots.txt route for a day. -->
          <add name="RobotsText" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the 400 Bad Request route for a day. -->
          <add name="BadRequest" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the 403 Forbidden route for a day. -->
          <add name="Forbidden" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the 405 Method Not Allowed route for a day. -->
          <add name="MethodNotAllowed" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the 404 Not Found route for a day. -->
          <add name="NotFound" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the 401 Unauthorized route for a day. -->
          <add name="Unauthorized" duration="86400" location="Any" varyByParam="none" />
          <!-- Cache the 500 Internal Server Error route for a day. -->
          <add name="InternalServerError" duration="86400" location="Any" varyByParam="none" />
        </outputCacheProfiles>
      </outputCacheSettings>
    </caching>

    <compilation debug="true" enablePrefetchOptimization="true" targetFramework="4.5.2" />
        <!-- mode - Turn on/off custom error pages. See also httpErrors existingResponse. -->
    <customErrors mode="Off" />
    <!-- httpOnlyCookies - Ensure that external script cannot access the cookie. -->
    <!-- requireSSL - Ensure that the cookie can only be transported over HTTPS. -->
    <httpCookies httpOnlyCookies="true" requireSSL="false" />
    <httpHandlers>
      <add path="glimpse.axd" verb="GET" type="Glimpse.AspNet.HttpHandler, Glimpse.AspNet" />
    </httpHandlers>
    <!-- enableVersionHeader - Remove the ASP.NET version number from the response headers. Added security through obscurity. -->
    <!-- executionTimeout - Specifies the maximum number of seconds that a request is allowed to execute before being automatically shut down by ASP.NET.
                            This time-out applies only if the debug attribute in the compilation element is False. To help to prevent shutting down the
                            application while you are debugging, do not set this time-out to a large value. The default is 110 seconds and has
                            been reduced to 30 seconds. -->
    <!-- maxQueryStringLength - The maximum length of the query string, in number of characters. The default is 2048.  If the length of a query string
                                exceeds the size limit, ASP.NET returns an HTTP 400 (Bad Request) status code. This setting is for ASP.NET while the
                                requestLimits maxQueryString setting is for IIS, you need to set both to the same value. -->
    <!-- maxRequestLength - Specifies the limit for the input stream buffering threshold, in KB. This limit can be used to prevent denial of service
                            attacks that are caused, for example, by users posting large files to the server. The default is 4096 (4 MB) and has been
                            reduced to 1024 (1 MB). This setting is for ASP.NET while the requestLimits maxAllowedContentLength setting is for IIS,
                            you need to set both to the same value or the smaller number wins (See http://stackoverflow.com/questions/6327452/which-gets-priority-maxrequestlength-or-maxallowedcontentlength). -->
    <!-- maxUrlLength - The maximum length of the URL, in number of characters. The default is 260. If the length of the request URL (which is the value
                        of the Path property https://msdn.microsoft.com/en-us/library/vstudio/system.web.httprequest.path(v=vs.100).aspx) exceeds the
                        configured size limit, ASP.NET returns an HTTP 400 (Bad Request) status code. This setting is for ASP.NET while the requestLimits
                        maxUrl setting is for IIS, you need to set both to the same value. -->

    <httpRuntime executionTimeout="30" maxQueryStringLength="2048" maxRequestLength="1024" maxUrlLength="260" targetFramework="4.5.2" enableVersionHeader="false" />
    <httpModules>
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" />
      <add name="Glimpse" type="Glimpse.AspNet.HttpModule, Glimpse.AspNet" />
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" />
    </httpModules>
      <!-- machineKey - If your this site is deployed to a server cluster or you are using shared hosting, generate a
                      machine key from IIS and enter it below. The machine key is used to generate MVC anti-forgery tokens
                      among other things (See http://blogs.msdn.com/b/amb/archive/2012/07/31/easiest-way-to-generate-machinekey.aspx)
                      Also don't forget to encrypt your machine key (See https://msdn.microsoft.com/en-us/library/dtkwfdky.aspx). -->
    <!--<machineKey decryptionKey="[YOUR DECRYPTION KEY GOES HERE]"
                validationKey="[YOUR VALIDATION KEY GOES HERE]"/>-->
    <!-- session - Sessions are created and used whenever you use the TempData property in your controllers or actions. They are generally discouraged due to performance concerns but it's up to you if you need it. -->
    <!-- cookieName - Sets the name of the ASP.NET session cookie (Defaults to 'ASP.NET_SessionId'). -->
    <!-- timeout - Specifies the number of minutes a session can be idle before it is abandoned. The default is 20 minutes. This should be kept as low as
                   possible. The longer this time period is, the more time a potential attacker has to make a man-in-the-middle attack and hijack the users
                   session. If you are using SSL/TLS, this is less of a concern. -->
    <sessionState cookieName="s" timeout="20" />
    <!-- trace - Enable tracing. Navigate to /trace.axd to view detailed request/response information (See https://msdn.microsoft.com/library/1y89ed7z%28VS.71%29.aspx). -->
    <trace enabled="true" />

  </system.web>
  <system.webServer>
    
        <!-- Stop IIS from doing courtesy redirects used to redirect a link to a directory without to a slash
         to one with a slash e.g. /Content redirects to /Content/. This gives a clue to hackers as to the location
         of directories. See http://www.iis.net/configreference/system.webserver/defaultdocument and
         http://www.troyhunt.com/2014/09/solving-tyranny-of-http-403-responses.html
         Note: This will stop IIS from returning the default document when navigating to a folder.
               e.g. navigating to /Folder/ which contains index.html will not return /Folder/index.html.
               This should not be a problem as we are using ASP.NET MVC controllers and actions. -->
    <defaultDocument enabled="false" />
    <!-- Custom error pages. See https://support.microsoft.com/en-us/kb/943891 -->
    <!-- existingResponse - Whether or not to enable custom error pages.
                            PassThrough - Allow the default MVC debug error page showing the full exception to display
                            Replace - Replace any error responses with custom error pages. -->

          <httpErrors errorMode="Custom" existingResponse="PassThrough">
      <!-- Redirect IIS 400 Bad Request responses to the error controllers bad request action. -->
      <remove statusCode="400" />
      <error statusCode="400" responseMode="ExecuteURL" path="/error/badrequest/" />
      <!-- Redirect IIS 401 Unauthorized responses to the error controllers unauthorized action. -->
      <remove statusCode="401" />
      <error statusCode="401" responseMode="ExecuteURL" path="/error/unauthorized/" />
      <remove statusCode="403" />
      <!-- Redirect IIS 403.14 Forbidden responses to the error controllers not found action.
           A 403.14 happens when navigating to an empty folder like /Content and directory browsing is turned off
           See http://www.troyhunt.com/2014/09/solving-tyranny-of-http-403-responses.html -->
      <error statusCode="403" subStatusCode="14" responseMode="ExecuteURL" path="/error/notfound/" />
      <!-- Redirect IIS 403.501 and 403.502 Forbidden responses to a static Forbidden page.
           This happens when someone tries to carry out a Denial of Service (DoS) attack on your site.
           See http://www.iis.net/learn/get-started/whats-new-in-iis-8/iis-80-dynamic-ip-address-restrictions -->
      <error statusCode="403" subStatusCode="501" responseMode="File" path="error\forbidden.html" />
      <error statusCode="403" subStatusCode="502" responseMode="File" path="error\forbidden.html" />
      <!-- Redirect IIS 403 Forbidden responses to the error controllers forbidden action. -->
      <error statusCode="403" responseMode="ExecuteURL" path="/error/forbidden/" />
      <!-- Redirect IIS 404 Not Found responses to the error controllers not found action. -->
      <remove statusCode="404" />
      <error statusCode="404" responseMode="ExecuteURL" path="/error/notfound/" />
      <!-- Redirect IIS 405 Method Not Allowed responses to the error controllers method not allowed action. -->
      <remove statusCode="405" />
      <error statusCode="405" responseMode="ExecuteURL" path="/error/methodnotallowed/" />
      <remove statusCode="500" />
      <!-- Redirect IIS 500.13 Internal Server Error responses to a static Service Unavailable page.
           A 500.13 occurs because the web server is too busy. The amount of traffic exceeds the Web site's configured capacity. -->
      <error statusCode="500" subStatusCode="13" responseMode="File" path="error\serviceunavailable.html" />
      <!-- Redirect IIS 500 Internal Server Error responses to the error controllers internal server error action. -->
      <error statusCode="500" responseMode="ExecuteURL" path="/error/internalservererror/" />
      <!-- Redirect IIS 503 Service Unavailable responses to a static Service Unavailable page. -->
      <remove statusCode="503" />
      <error statusCode="503" responseMode="File" path="error\serviceunavailable.html" />
      <!-- Redirect IIS 504 Gateway Timeout responses to a static Gateway Timeout page. -->
      <remove statusCode="504" />
      <error statusCode="504" responseMode="File" path="error\gatewaytimeout.html" />
    </httpErrors>      
    <modules>
      <remove name="FormsAuthentication" />
    <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler" /><add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" preCondition="managedHandler" /><add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" preCondition="managedHandler" />
    <!--<remove name="TelemetryCorrelationHttpModule" />
    <add name="TelemetryCorrelationHttpModule" type="Microsoft.AspNet.TelemetryCorrelation.TelemetryCorrelationHttpModule, Microsoft.AspNet.TelemetryCorrelation" preCondition="integratedMode,managedHandler" />
    <remove name="ApplicationInsightsWebTracking" />
    <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" preCondition="managedHandler" />
    <add name="NWebsecHttpHeaderSecurityModule" type="NWebsec.Modules.HttpHeaderSecurityModule, NWebsec, Version=4.3.0.0, Culture=neutral, PublicKeyToken=3613da5f958908a1" />-->
    </modules>
    <validation validateIntegratedModeConfiguration="false" />
  <httpProtocol>
      <customHeaders>
        <clear />
      </customHeaders>
    </httpProtocol><security>
      <requestFiltering>
        <hiddenSegments>
          <add segment="NWebsecConfig" />
        </hiddenSegments>
      </requestFiltering>
    </security></system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.OAuth" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.Cookies" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Diagnostics.DiagnosticSource" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.2.1" newVersion="4.0.2.1" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Autofac" publicKeyToken="17863af14b0044da" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.6.2.0" newVersion="4.6.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Autofac.Integration.Owin" publicKeyToken="17863af14b0044da" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
<elmah>
    <!--
        See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for 
        more information on remote access and securing ELMAH.
    -->
    <security allowRemoteAccess="false" />
  </elmah><location path="elmah.axd" inheritInChildApplications="false">
    <system.web>
      <httpHandlers>
        <add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" />
      </httpHandlers>
      <!-- 
        See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for 
        more information on using ASP.NET authorization securing ELMAH.

      <authorization>
        <allow roles="admin" />
        <deny users="*" />  
      </authorization>
      -->  
    </system.web>
    <system.webServer>
      <handlers>
        <add name="ELMAH" verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" preCondition="integratedMode" />
      </handlers>
    </system.webServer>
  </location>
<system.codedom>
<compilers>
<compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.7.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:6 /nowarn:1659;1699;1701" />
<compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.7.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:14 /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
</compilers>
</system.codedom>
<nwebsec>
    <httpHeaderSecurityModule xmlns="http://nwebsec.com/HttpHeaderSecurityModuleConfig.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="NWebsecConfig/HttpHeaderSecurityModuleConfig.xsd">

    </httpHeaderSecurityModule>
  </nwebsec></configuration>